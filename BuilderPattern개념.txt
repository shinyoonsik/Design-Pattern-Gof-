1. Builder Pattern: 객체를 생성할 때 흔하게 사용하는 패턴으로 Dot Chain문법을 활용한다. 
	           Effective-Java에서 말하는 빌더 패턴은 객체 생성을 깔끔하고 유연하게 하기 위한 기법이다.
	ex) Member customer = Member.builder().name("홍길동").age(30).build()

	- 규칙: 생성자 인자가 많을 때는 Builder패턴 적용을 고려해 보자. 예를 들어 초기화 해주어야 하는 멤버필드들의 조합이 많아지는 경우
 	          경우에 맞는 생성자를 모두 만들어주는 것은 비효율적이다.
	          ex) public Person(String name) { this.name = name; } ,
		 public Person(String name, int age) { this.name = name; this.age = age},
  		 public Person(String name, String addr) { this.name = name;  this.addr = addr; }
		 public Person(String name, int age, String gender) { this.name = name; this.age = age; this.gender = gender}... 다 만들거야!!!?

	- 결론: 빌더 패턴이란 객체 생성을 깔끔하고 유연하게 하기 위한 기법이다!  