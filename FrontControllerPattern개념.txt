1. Front Controller 디자인 패턴이란?
	- 하나의 웹 애플리케이션에는 많은 뷰와 컨트롤러가 존재해서 각각의 뷰와 컨트롤러가 독립적으로 실행되면
	  서버 입장에서 현재 웹 애플리케이션 실행에 대하여 일괄적으로 처리하기가 어렵다. 이럴때, 모든 컨트롤러를 
	  묶는 FrontController를 두고 뷰에서 들어오는 모든 요청을 담당하여 웹 애플리케이션을 실행하면 모든 요청을
	  일괄적으로 처리할 수 있다.
	  
	요약: 모든 컨트롤러를 sub컨트롤러로 두고 최상위root컨트롤러로서 FrontController를 만드는 것이 이 디자인 패턴이다.
	        (요청에 대한 처리를 서버입장에서 일괄적으로 처리하기 위해서 사용). FrontController는 이에 대해 알맞은 SubController를 
	        배정하는 역할을 담당한다.

	cf) 웹MVC패턴에는 모델1과 모델2방식이 있다
		1) Model1: 하나의 파일안에 코드를 통합적으로 집어 넣고 개발하는 방식. 즉 MVC구분 없이 하나의 자바파일안에서 처리하는 방식
			pros - 개발 속도가 빠르다
			cons - 유지보수가 어렵다
		2) Mode2: Model1방식에서 통합되어 있던 코드를 MVC역할에 맞게 분리하여 개발하는 방식
			- 모델(M): 서비스와 데이터베이스 처리를 담당하는 역할. service패키지, dao(mapper)패키지안의 요소들이 모델에 해당한다
			- 뷰(V): JSP, 타임리프와같은 템플릿 엔진을 사용해 응답화면을 구성하여 client에게 보여지는 부분
			- 컨트롤러: 뷰와 모델을 중개하는 역할